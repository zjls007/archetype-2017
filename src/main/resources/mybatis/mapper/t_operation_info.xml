<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cy.dao.system.OperationInfoDAO">

    <resultMap id="BaseResultMap" type="com.cy.entity.system.OperationInfo">
        <id column="id" property="id" />
        <result column="name" property="name" />
        <result column="code" property="code" />
        <result column="native" property="nativeState" />
        <result column="create_time" property="createTime" />
        <result column="lst_upd_time" property="lstUpdTime" />
    </resultMap>

    <sql id="Base_Column_List">
        id, name, code, native, create_time, lst_upd_time
    </sql>

    <sql id="Base_Alias_Column_List">
        toi.id, toi.name, toi.code, toi.create_time, toi.lst_upd_time
    </sql>

    <insert id="insert" parameterType="com.cy.entity.system.OperationInfo" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        INSERT INTO t_operation_info
        (name, code, create_time, lst_upd_time)
        VALUES
        (#{name}, #{code}, now(), now())
    </insert>

    <insert id="batchInsert" parameterType="com.cy.entity.system.OperationInfo">
        INSERT INTO t_operation_info
        (name, code, create_time, lst_upd_time)
        VALUES
        <foreach collection="list" item="item" separator=",">
           (#{item.name}, #{item.code}, now(), now())
        </foreach>
    </insert>

    <delete id="delete">
        DELETE FROM t_operation_info WHERE id = #{id}
    </delete>

    <delete id="batchDelete">
        DELETE FROM t_operation_info WHERE id IN
        <foreach collection="list" open="(" close=")" separator="," item="item">
            #{item}
        </foreach>
        and native = 0
    </delete>

    <update id="update" parameterType="com.cy.entity.system.OperationInfo" >
        UPDATE t_operation_info
        <set>
            <if test="name != null" >
                name = #{name},
            </if>
            <if test="code != null" >
                code = #{code},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime},
            </if>
            lst_upd_time = now()
        </set>
        WHERE id = #{id} AND native = 0
    </update>

    <select id="getById" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM t_operation_info WHERE id = #{id}
    </select>

    <select id="getByIdList" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM t_operation_info WHERE id IN
        <foreach collection="list" open="(" close=")" separator="," item="item">
            #{item}
        </foreach>
    </select>

    <select id="list" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM t_operation_info
        <where>
            <if test="name != null and name != ''">
                AND name LIKE CONCAT('%',#{name},'%')
            </if>
            <if test="code != null and code != ''">
                AND code LIKE CONCAT('%',#{code},'%')
            </if>
        </where>
        ORDER BY lst_upd_time DESC
    </select>

</mapper>

