<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cy.dao.AttachmentRefDAO">

    <resultMap id="BaseResultMap" type="com.cy.entity.AttachmentRef">
        <id column="id" property="id" />
        <result column="file_id" property="fileId" />
        <result column="ref_id" property="refId" />
        <result column="file_type" property="fileType" />
        <result column="ref_type" property="refType" />
        <result column="create_user_id" property="createUserId" />
        <result column="create_time" property="createTime" />
    </resultMap>

    <resultMap id="BaseResultMapAS" type="com.cy.entity.AttachmentRef">
        <id column="ar_id" property="id" />
        <result column="ar_file_id" property="fileId" />
        <result column="ar_file_type" property="fileType" />
        <result column="ar_ref_id" property="refId" />
        <result column="ar_ref_type" property="refType" />
        <result column="ar_create_user_id" property="createUserId" />
        <result column="ar_create_time" property="createTime" />
    </resultMap>

    <sql id="Base_Column_List">
        id, file_id, file_type, ref_id, ref_type, create_user_id, create_time
    </sql>

    <sql id="Base_Alias_Column_List">
        ar.id, ar.file_id, ar.file_type, ar.ref_id, ar.ref_type, ar.create_user_id, ar.create_time
    </sql>

    <sql id="Base_Alias_Column_List_AS">
        ar.id AS ar_id, ar.file_id AS ar_file_id, ar.file_type AS ar_file_type, ar.ref_id AS ar_ref_id, ar.ref_type AS ar_ref_type, ar.create_user_id AS ar_create_user_id, ar.create_time AS ar_create_time
    </sql>

    <insert id="insert" parameterType="com.cy.entity.AttachmentRef" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        INSERT INTO attachment_ref
        (file_id, ref_id, file_type, ref_type, create_user_id, create_time)
        VALUES
        (#{fileId}, #{refId}, #{fileType}, #{refType}, #{createUserId}, now())
    </insert>

    <insert id="batchInsert" parameterType="com.cy.entity.AttachmentRef">
        INSERT INTO attachment_ref
        (file_id, ref_id, file_type, ref_type, create_user_id, create_time)
        VALUES
        <foreach collection="list" item="item" separator=",">
           (#{item.fileId}, #{item.refId}, #{item.fileType}, #{item.refType}, #{item.createUserId}, now())
        </foreach>
    </insert>

    <delete id="deleteById">
        DELETE FROM attachment_ref WHERE id = #{id}
    </delete>

    <delete id="deleteByTaskId">
        DELETE FROM attachment_ref WHERE ref_id = #{id} AND ref_type ='task'
    </delete>

    <delete id="batchDelete">
        DELETE FROM attachment_ref WHERE id IN
        <foreach collection="list" open="(" close=")" separator="," item="item">
            #{item}
        </foreach>
    </delete>

    <update id="updateByIdSelective">
        UPDATE attachment_ref
        <set>
            <if test="fileId != null" >
                file_id = #{fileId},
            </if>
            <if test="refId != null" >
                ref_id = #{refId},
            </if>
            <if test="refType != null" >
                ref_type = #{refType},
            </if>
            <if test="createUserId != null" >
                create_user_id = #{createUserId},
            </if>
        </set>
        WHERE id = #{id}
    </update>

    <update id="updateById">
        UPDATE attachment_ref
        <set>
            file_id = #{fileId},
            ref_id = #{refId},
            ref_type = #{refType},
            create_user_id = #{createUserId},
        </set>
        WHERE id = #{id}
    </update>

    <select id="getById" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM attachment_ref WHERE id = #{id}
    </select>

    <select id="getByIdList" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM attachment_ref WHERE id IN
        <foreach collection="list" open="(" close=")" separator="," item="item">
            #{item}
        </foreach>
    </select>

    <select id="list" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM attachment_ref
        <where>
            <if test="id != null" >
                AND id = #{id}
            </if>
            <if test="fileId != null and fileId != ''" >
                AND file_id = #{fileId}
            </if>
            <if test="refId != null" >
                AND ref_id = #{refId}
            </if>
            <if test="refType != null and refType != ''" >
                AND ref_type = #{refType}
            </if>
            <if test="createUserId != null" >
                AND create_user_id = #{createUserId}
            </if>
            <if test="createTime != null" >
                AND create_time = #{createTime}
            </if>
        </where>
    </select>

    <select id="listByRefIdAndRefType" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM attachment_ref
        WHERE ref_id = #{refId} AND ref_type = #{refType}
        ORDER BY id ASC
    </select>

</mapper>

