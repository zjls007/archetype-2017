<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cy.dao.TaskNoteDAO">

    <resultMap id="BaseResultMap" type="com.cy.entity.TaskNote">
        <id column="id" property="id" />
        <result column="task_id" property="taskId" />
        <result column="date" property="date" />
        <result column="remark" property="remark" />
        <result column="operate_user_id" property="operateUserId" />
        <result column="create_time" property="createTime" />
    </resultMap>

    <resultMap id="BaseResultMapAS" type="com.cy.entity.TaskNote">
        <id column="tn_id" property="id" />
        <result column="tn_task_id" property="taskId" />
        <result column="tn_date" property="date" />
        <result column="tn_remark" property="remark" />
        <result column="tn_operate_user_id" property="operateUserId" />
        <result column="tn_create_time" property="createTime" />
    </resultMap>

    <sql id="Base_Column_List">
        id, task_id, date, remark, operate_user_id, create_time
    </sql>

    <sql id="Base_Alias_Column_List">
        tn.id, tn.task_id, tn.date, tn.remark, tn.operate_user_id, tn.create_time
    </sql>

    <sql id="Base_Alias_Column_List_AS">
        tn.id AS tn_id, tn.task_id AS tn_task_id, tn.date AS tn_date, tn.remark AS tn_remark, tn.operate_user_id AS tn_operate_user_id, tn.create_time AS tn_create_time
    </sql>

    <insert id="insert" parameterType="com.cy.entity.TaskNote" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        INSERT INTO task_note
        (task_id, date, remark, operate_user_id, create_time)
        VALUES
        (#{taskId}, #{date}, #{remark}, #{operateUserId}, now())
    </insert>

    <insert id="batchInsert" parameterType="com.cy.entity.TaskNote">
        INSERT INTO task_note
        (task_id, date, remark, operate_user_id, create_time)
        VALUES
        <foreach collection="list" item="item" separator=",">
           (#{item.taskId}, #{item.date}, #{item.remark}, #{item.operateUserId}, now())
        </foreach>
    </insert>

    <delete id="deleteById">
        DELETE FROM task_note WHERE id = #{id}
    </delete>

    <delete id="batchDelete">
        DELETE FROM task_note WHERE id IN
        <foreach collection="list" open="(" close=")" separator="," item="item">
            #{item}
        </foreach>
    </delete>

    <update id="updateByIdSelective">
        UPDATE task_note
        <set>
            <if test="taskId != null" >
                task_id = #{taskId},
            </if>
            <if test="date != null" >
                date = #{date},
            </if>
            <if test="remark != null" >
                remark = #{remark},
            </if>
            <if test="operateUserId != null" >
                operate_user_id = #{operateUserId},
            </if>
        </set>
        WHERE id = #{id}
    </update>

    <update id="updateById">
        UPDATE task_note
        <set>
            task_id = #{taskId},
            date = #{date},
            remark = #{remark},
            operate_user_id = #{operateUserId},
        </set>
        WHERE id = #{id}
    </update>

    <select id="getById" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM task_note WHERE id = #{id}
    </select>

    <select id="getByIdList" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM task_note WHERE id IN
        <foreach collection="list" open="(" close=")" separator="," item="item">
            #{item}
        </foreach>
    </select>

    <select id="list" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM task_note
        <where>
            <if test="id != null" >
                AND id = #{id}
            </if>
            <if test="taskId != null" >
                AND task_id = #{taskId}
            </if>
            <if test="date != null" >
                AND date = #{date}
            </if>
            <if test="remark != null and remark != ''" >
                AND remark = #{remark}
            </if>
            <if test="operateUserId != null" >
                AND operate_user_id = #{operateUserId}
            </if>
            <if test="createTime != null" >
                AND create_time = #{createTime}
            </if>
        </where>
    </select>

    <select id="listByTaskId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM task_note
        WHERE task_id = #{taskId} ORDER BY date ASC
    </select>

</mapper>

